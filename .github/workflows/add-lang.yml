name: Add new language
on:
  issues:
    types: [ labeled ]
jobs:
  add_new_language:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: github.event.label.name == 'new language'
    steps:

# Check whether the language has been written correctly:
      - name: Check issue title format
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_NUM: ${{ github.event.issue.number }}
        run: |
          NEW_LANG=$(sed 's/.*\[\([^]]*\)].*/\1/' <<< "$ISSUE_TITLE")
          if [[ $NEW_LANG =~ ^[a-z]{2}(_[A-Z]{2})?$ ]]; then
            echo "new_lang=$NEW_LANG" >> $GITHUB_ENV
            echo "issue_num=$ISSUE_NUM" >> $GITHUB_ENV
          else
            echo Language code in wrong format
            exit 1
          fi

# Check out repo:
      - uses: actions/checkout@v2
        with:
          ref: next-release

# Check po4a cache:
      - name: Check for po4a cache
        uses: actions/cache@v1.0.3
        id: cache-po4a
        with:
          path: "~/po4a"
          key: ${{ runner.os }}-po4a
      - name: Install or retrieve po4a from cache
        env:
          CACHE_HIT: ${{ steps.cache-po4a.outputs.cache-hit }}

# Create new lang dir. If CACHE_HIT: true, retrieve the cache. If not, install po4a and its dependencies and copy them all to a folder (~/po4a/) to be cached:
        run: |
         mkdir _translator-files/po/${{ env.new_lang }}
          ./_po4a-tools/po4a-cache.sh

# Create .po files for new language:
      - name: Create .po files
        run: ./_po4a-tools/po4a-update-templates.sh

# Push changes to 'next-release':
      - name: Push changes to repo
        uses: EndBug/add-and-commit@v7
        with:
          branch: next-release
          default_author: github_actions
          message: 'AUTO: Add new language: (${{ env.new_lang }}) #${{ env.issue_num }}'

# Create translated .md files. Never pushed to the repo.
      - name: Create translated .md docs and stats
        run: ./_po4a-tools/po4a-create-all-targets.sh

# Build site
      - name: Build the site in the jekyll/builder container
        run: |
          docker run \
          -v ${{ github.workspace }}:/srv/jekyll -v ${{ github.workspace }}/_site:/srv/jekyll/_site \
          jekyll/builder:latest /bin/bash -c "chmod a+w /srv/jekyll/Gemfile.lock && chmod 777 /srv/jekyll && jekyll build --future"
